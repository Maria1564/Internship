
//–∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
const btnRes = document.querySelector(".btn-result")

btnRes.addEventListener("click", ()=>{
    const firstNum = document.getElementById("first-num").value
    const secondNum = document.getElementById("second-num").value
    const operator = document.querySelector("#operator").value.trim()
    let result = document.querySelector(".result")

    if(!firstNum|| !secondNum || !operator) {

        alert("–ù–µ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∏–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ!")
        return
    }

    switch(operator){
        case "+":
            result.textContent = +firstNum + +secondNum
            break
        case "-":
            result.textContent = +firstNum - +secondNum
            break
        case "*":
            result.textContent = Number(firstNum) * Number(secondNum)
            break
        case "/": 
            result.textContent = Number(firstNum) / Number(secondNum)
            break
        default:
            result.textContent = "–ß—Ç–æ –∑–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä —Ç—ã –≤–≤—ë–ª?... "
    }

})


//—Ä–∞–±–æ—Ç–∞ —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏, –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
const form = document.querySelector(".form")

form.addEventListener("click", (e)=>{

    if(e.target.tagName!=="BUTTON" ) return
    if (!form.checkValidity()) return;


    
    const user  = {}
    const name = form.querySelector("#name").value.trim()
    name ? user.name = name : null
    
    
    const age = form.querySelector("#age").value
    user.age = age
    
    const regPhone = new RegExp("\\d\\s\\(\\d\\d\\d\\)\\s\\d\\d\\d") 
    let phone  = form.querySelector("#phone").value
    
    phone =  `${phone.match(regPhone)[0]}-**-**`
    user.phone = phone
    console.group("user")
    //console.log()()("name >> ", user.name)
    //console.log()("age >> ", user.age)
    //console.log()("phone >> ", user.phone)
    console.groupEnd()
    
    const divAboutUser = document.querySelector(".about-user")
    
    //–¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞
    const {name: userName ="–ê–Ω–æ–Ω–∏–º", phone: number, ...other} = user

    let pName = document.createElement("p")
    pName.innerHTML = "<b>–∏–º—è:</b> " + userName
    
    let pAge = document.createElement("p")
    pAge.innerHTML = "<b>–≤–æ–∑—Ä–∞—Å—Ç:</b> " + other.age
    
    let pPhone = document.createElement("p")
    pPhone.innerHTML = "<b>—Ç–µ–ª–µ—Ñ–æ–Ω:</b> " + number
    
    divAboutUser.append(pName, pAge, pPhone)

    e.preventDefault()

    }
)


// –ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, try...catch
const btnGame = document.querySelector(".game-btn")
const totalAttempts = document.querySelector(".game-total > span")


let result
let randomNumber = Math.floor(Math.random() * 90) + 1

btnGame.addEventListener("click", ()=>{
    if(btnGame.textContent === "–∑–∞–Ω–æ–≤–æ"){
        result = document.querySelector("#game-number")
        let res = confirm("–¢–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ?")
        if(res){
            randomNumber = Math.floor(Math.random() * 90) + 1
            totalAttempts.textContent = totalAttempts.textContent && 0
            result.value = ""
            btnGame.textContent="–ø—Ä–æ–≤–µ—Ä–∏—Ç—å"
        }
    }else {
        try{
            result = document.querySelector("#game-number").value
            //console.log()(typeof result, result, typeof randomNumber, randomNumber)
            if(result === "" || isNaN(result)){
                throw new Error("–ü—É—Å—Ç–æ (–Ω–µ—Ç —á–∏—Å–ª–∞) –∏–ª–∏ –≤–≤–µ–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞")
            }else if(+result !== randomNumber) {
                alert("–î—Ä—É–≥–æ–µ —á–∏—Å–ª–æ –∑–∞–≥–∞–¥–∞–Ω–æ")
                totalAttempts.textContent = +totalAttempts.textContent + 1
            }else{
                btnGame.textContent="–∑–∞–Ω–æ–≤–æ"
                alert("–£—Ä–∞–∞, —É–≥–∞–¥–∞–ª–∏)")
            }
        }catch(err){
            alert(`validation Error: ${err.message}`)
        }
    }
})




//–Ω–∞–≤–µ–¥–µ–Ω–∏–µ –∏ —Å–Ω—è—Ç–∏–µ –∫—É—Ä—Å–æ—Ä–∞ –º—ã—à–∏
const imgCat = document.querySelector(".cat-img")

imgCat.addEventListener("mouseover",()=>{
    if(imgCat.src.match("catOne.jpg")){
    imgCat.src = "./img/catTwo.jpg"
    }
})

imgCat.addEventListener("mouseout",()=>{
    if(imgCat.src.match("catTwo.jpg")){
    imgCat.src = "./img/catOne.jpg"
    }
})

//—Ñ–æ–∫—É—Å –∏–Ω–ø—É—Ç–∞
// const word = prompt("–í–≤–µ–¥–∏ –ª—é–±–æ–µ —Å–ª–æ–≤–æ –∏ –∑–∞–ø–æ–º–Ω–∏ –µ–≥–æ, –∏–Ω–∞—á–µ —Å–∞–π—Ç –ø—Ä–∏–¥—É–º–∞–µ—Ç —Å–≤–æ—ë —Å–ª–æ–≤–æ))","").trim()
const inputMagic = document.getElementById("magic-word")


//—Å—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
const showWord = (word = "–°–µ—Ç—å") =>{
    inputMagic.value = word
    inputMagic.disabled = true
    document.querySelector(".magic > label").textContent = "–ò–ª–∏ –≤—Å—ë —Ç–∞–∫–∏ –Ω–µ–æ–±—ã—á–Ω—ã–πüòâ"
}

inputMagic.addEventListener("focus", ()=>{
    if(!word) {
        showWord()
    }else{
        showWord(word)
    }
})


//–∫–ª–∏–∫, –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–æ–±—ã—Ç–∏—è, –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
const calendar = document.querySelector(".calendar")
const divEvent = document.querySelector(".calender-event")

calendar.addEventListener("click", (e)=>{
    if(e.target.tagName == "A"){
    e.preventDefault()
    let date = e.target.dataset.date
    let dateEvent = e.target.dataset.event
    divEvent.innerHTML = `
    <h4>${date}</h4>
    <p>${dateEvent !== "–Ω–∏—á–µ–≥–æ" ? `—ç–∫–∑–∞–º–µ–Ω: ${dateEvent}`:"–æ—Ç–¥—ã—Ö"}</p>
    `
    divEvent.classList.add("active")
    }

})


//–∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
function changeContent(e){
    //console.log()(e, e.value)
    const text =  document.querySelector(".content > span")
    text.textContent =e.value

}


//spread/rest
const copyReversArr = (nameArr, ...arr) =>{
    let originalArr = `original: ${nameArr} >>[${arr}] `
    const arrCopy = [...arr]
    let reversCopy = `revers copy: ${nameArr} >> [${arrCopy.reverse()}]`

    return {
        originalArr,
        reversCopy
    }
}   

//console.log()(copyReversArr("numbers", 3, 6, 2, 7, 45, 1))
//console.log()(copyReversArr("fruits", "banana", "apple", "apricot", "peach"))



const btnGenerate = document.querySelector(".generate-btn")
const listGenerate = document.querySelector(".generate-list")

//–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä (yeald)
function* getItem(){
    yield "–≤–∏–ª–∫–∞",
    yield "–∫–æ—Ä–æ–±–∫–∞",
    yield "–∫–∏—Å—Ç—å (–¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è)",
    yield "–∫–∞—Ä–∞–Ω–¥–∞—à"
    return "–º—ã–ª–æ"
}

const item = getItem()
btnGenerate.addEventListener("click", () => {
    let {value, done} = item.next()
    
    let li = document.createElement("li")
    li.textContent = value
    listGenerate.append(li)
    
    if(done) {
        btnGenerate.disabled = true
        return
    }
})

//–ö–ª–∞—Å—Å
const blockRegister = document.querySelector(".register")
const blockLogin = document.querySelector(".auth")
const formReg = document.querySelector(".form-register")
const formAuth = document.querySelector(".form-auth")
blockLogin.style.display = "none"

class User {
    constructor(){
        this.userName =null,
        this.email = null
        this.password = null
        this.isAuth = false
    }
    
    register(name, email, password){
        this.userName  = name
        this.email = email
        this.password = password
        alert("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
    }
    
    login(email, password){
        if(this.email !== email || this.password !== password) {
            return alert("–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å")
            
        }
        
        alert(`${this.userName}, –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã`)
        this.isAuth = true
    }
    
}

let user = null
const local =JSON.parse(localStorage.getItem("users"))?.length
if (!local){
    localStorage.setItem("users",  JSON.stringify([]))
}else{
    //console.log()("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ",   JSON.parse(localStorage.getItem("users")))
}

formReg.addEventListener("submit", (e)=>{
    e.preventDefault()

    user = new User()
    const formData = new FormData(e.target);
    const name = formData.get('name');
    const email = formData.get('email');
    const password = formData.get('password');

    user.register(name, email, password)

    blockRegister.style.display = "none"
    blockLogin.style.display = "block"

    //localStorage
    const currentUsers = JSON.parse(localStorage.getItem("users"))
    localStorage.setItem("users", JSON.stringify([...currentUsers, user]))

    //console.log()("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ", JSON.parse(localStorage.getItem("users")))

})

    
formAuth.addEventListener("submit", (e)=>{
    e.preventDefault()

    const formData = new FormData(e.target);
    const email = formData.get('email');
    const password = formData.get('password');

    user.login(email, password)

    if(user.isAuth){
        const btnLogin = document.querySelector(".btn-auth")
        btnLogin.disabled = true
    }
})



//super (—É –æ–±—ä–µ–∫—Ç–æ–≤)
const bird = {
    aboutBird(){
        //console.log()("–≠—Ç–æ –ø—Ç–∏—Ü–∞, –æ–Ω–∞ –ª–µ—Ç–∞–µ—Ç")
    }
}

const goose = {
    aboutBird(){
        super.aboutBird()
        //console.log()("–ê —Ç–∞–∫–∂–µ —â–∏–ø–∞–µ—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ–π –ø—Ç–∏—Ü–µ–π —è–≤–ª—è–µ—Ç—Å—è –≥—É—Å—å")
    }
}


Object.setPrototypeOf(goose, bird)

goose.aboutBird() //–≠—Ç–æ –ø—Ç–∏—Ü–∞, –æ–Ω–∞ –ª–µ—Ç–∞–µ—Ç  –ê —Ç–∞–∫–∂–µ —â–∏–ø–∞–µ—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ–π –ø—Ç–∏—Ü–µ–π —è–≤–ª—è–µ—Ç—Å—è –≥—É—Å—å 

bird.aboutBird() //–≠—Ç–æ –ø—Ç–∏—Ü–∞, –æ–Ω–∞ –ª–µ—Ç–∞–µ—Ç


//–ø–æ–ª—É—á–µ–Ω–∏–µ –∏ –≤—ã–≤–æ–¥ url —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
const url = location.href
// alert(`URL —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${url}`)
// alert(`–ö–æ–ª–∏—á–µ—Å–≤—Ç–æ –∑–∞–ø–∏—Å–µ–π –≤ –∏—Å—Ç–æ—Ä–∏–∏: ${history.length}`)

//–æ–±—ä–µ–∫—Ç history
const nextHist = document.querySelector(".open")
nextHist.addEventListener("click", ()=>{ 
    const path = location.pathname
    //console.log()(path)
    if(path !== "/catalog"){
        nextHist.textContent = " –ö–∞—Ç–∞—Ç–ª–æ–≥"
        history.pushState({lastPath: location.pathname}, "", "/catalog")
    }else{
        nextHist.textContent = " –¥—Ä—É–≥–æ–µ"
        history.pushState({lastPath: location.pathname}, "", "/other")
    }
})

window.addEventListener("popstate", (event)=> console.log()( event.state))


// Cookie
document.cookie = "userToken=ifg5ka5y;  max-age=1800"

setTimeout(()=>{
    // alert("–æ–±–Ω–æ–≤–ª–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É " + document.cookie)
    document.cookie += "; secure; samesite=strict"
}, 10000)


//sessionStorage
// debugger
if(sessionStorage.getItem("countVisited")){
    sessionStorage.setItem("countVisited", Number(sessionStorage.getItem("countVisited")) + 1)
    //console.log()("countVisited >> ", sessionStorage.getItem("countVisited"))
    // debugger
}else{
    sessionStorage.setItem("countVisited", 1)
}
//console.log()(`–°–∞–π—Ç –±—ã–ª –ø–æ—Å–≤–µ—â—ë–Ω ${sessionStorage.getItem("countVisited")} —Ä–∞–∑(—Ä–∞–∑–∞)`)


// Promise

//–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
const getRepositories = (url)=>{
    new Promise(resolve => {
        resolve(fetch(url))
    
    })
    .then(listRepos=>  listRepos.json())
    .then(listRepos=> {
        const list = document.querySelector(".list_rep")
        console.log("list rep>> ", listRepos)
        list.innerHTML =""
        for (let obj of listRepos){
            console.log(obj.full_name)
            let li = document.createElement("li")
            li.textContent = obj.full_name
            console.log(li)
            list.append(li)
        }
    })
    .catch(err => alert(err.message))
}



const getPromise = (username)=>{
    return Promise.resolve(fetch(`https://api.github.com/users/${username}`))
}


getPromise("maria1564")
.then(resp=> {
    if(resp.ok === false){
        throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
    }
    return resp.json()
} )
.then(infoUser => {
    console.log("infoUser >> ", infoUser)
    document.querySelector(".username").textContent = infoUser.login
    const urlRepo = infoUser.repos_url
    getRepositories(urlRepo)
})
.catch(err => console.log("err >> ", err.message)|| alert(err.message))


// async/await
// const funcAwait = async(username)=>{
//     try{

//         const res = await fetch(`https://api.github.com/users/${username}`)
//         if(res.ok === false) {
//             throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
//         }

//         const infoUser = await res.json()
//         console.log(infoUser)
//         document.querySelector(".username").textContent = infoUser.login
//         const urlRepo = infoUser.repos_url
//         getRepositories(urlRepo)
//     }catch(error){
//         console.log("error >> ", error.message)
//         alert(error.message + " (async/await)")
//     }

// }

// funcAwait("takeo")
